MongoDB

How to install/uninstall and run mongodb on Ubuntu, check:
    https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/

To see mongoDB server docs:
    https://docs.mongodb.com/manual/

How to run mongodb as local service
    Check built in init system
        >ps --no-headers -o comm 1
    Run command (if built in = systemd)
        > sudo systemctl start mongod   

    OBS: You can optionally ensure that MongoDB will start following a system reboot by issuing the following command:
        > sudo systemctl enable mongod

Verify that MongoDB has started successfully.Â¶
    > sudo systemctl status mongod

Stop MongoDB.
    > sudo systemctl stop mongod

Restart MongoDB.
    > sudo systemctl restart mongod

You can follow the state of the process for errors 
or important messages by watching the output 
in the /var/log/mongodb/mongod.log file.

Run mongo shell
    Start a mongo shell on the same host machine as the mongod. 
    You can run the mongo shell without any command-line options 
    to connect to a mongod that is running on your localhost 
    with default port 27017:
        > mongo

See mongo shell help
    (on mongo shell)
    > help

Create new db
    (on mongo shell)
    > use <new name>

Show active db
    (on mongo shell)
    > db

Collections on mongoDB are similar to SQL Tables
Documents on mongoDB are similar to table items (rows) on SQL

MongoDB CRUD Operations
    https://docs.mongodb.com/manual/crud/

Relationships in mongoDB
    1. Embed documents inside other documents
        example: embed reviews of the product inside product document        
            db.products.insert(
                {
                _id: 1,
                name: "Pen",
                price: 1.2,
                stock:12,
                review: [
                    {
                        authorName: "Sally",
                        rating: 5,
                        review: "Best pen ever" 
                    },
                    {
                        authorName: "Davi",
                        rating: 3,
                        review: "pen ok" 
                    }
                ]}
            )
    2. Creating another collection that refer to unique identifier on other collection
        example: 
            products collection:
                {
                    _id:1,
                    name: "Pen",
                    price: 1.20,
                    stock:32
                }

                {
                    _id:2,
                    name: "Pencil",
                    price: 0.8,
                    stock:12
                }
            orders collection:
                {
                    _orderNumber: 3243,
                    productsOrdered: [1, 2]
                }

MongoDB on node.js
    1. local driver
        https://docs.mongodb.com/drivers/

    2. ODM (mongoose module)
        ODM is a object document mapper
        
    

