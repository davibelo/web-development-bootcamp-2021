SQL databases
    SQL = Structured Query Language. 
        SQL is used to communicate with a database. 
        According to ANSI (American National Standards Institute), 
        it is the standard language for relational database 
        management systems.
    SQL databases are good for:
        - data that you know well and can know all columns 
            that will be implemented since beginning 
        - data you want to build relationships
            example of 3 SQL tables:
                Customers (Customer ID, First Name, Last Name, Address)
                Products (Product ID, Name, Price)
                Orders (Order ID, Customer ID, Product ID, Quantity)

                It is possible to build relationships on columns between tables
    SQL databases scalability
        It can't be distributed, to escalate it is need to increase your server 
        capabilities
                   

NoSQL
    NoSQL = Not only SQL
    
    A NoSQL database provides a mechanism for storage and retrieval of data 
    that is modeled in means OTHER than the tabular relations used in relational 
    databases.

    Not so fast as SQL databases, but useful in some situations that you don't have
    too much relationships between tables.

    NoSQL databases are easier to escalate (better scalability) because it allows to 
    distribute your data between various servers!

Databases scalability building analogy 
    Big SQL database = Very tall building
    Big NoSQL database = Various small buildings distributed through neighborhoods

Final differences SQL x NoSQL
    SQL = 
        mature (no new modifications on technology)
        table structure
        require a schema (name of tables, columns...)
        great with relationships (faster queries)
        scales vertically (big server)

    NoSQL = 
        new (it is possible receive upgrades)
        document structure
        more flexible to changes
        not great with relationships
        scales horizontally (more small distributed servers)

SQL documentation
    https://www.w3schools.com/sql/

Site to train SQL and other DBs
    https://sqliteonline.com/

Examples of SQL code:

- Creating a table:
    CREATE TABLE products (
    id INT NOT NULL,
    name STRING,
    price MONEY,
    PRIMARY KEY (id)
    );

- Inserting values into table
    INSERT INTO products
    VALUES (1, "Pen", 1.2)

    INSERT INTO products (id, name)
    VALUES (2, "Pencil")

    INSERT INTO orders
    VALUES (1, 4362, 2, 1)

- Showing table
    SELECT * FROM products

    SELECT * FROM products WHERE id=1

- Updating column values
    UPDATE products
    set price = 0.8
    WHERE name = "Pencil"

- Adding new column on a table
    ALTER TABLE products
    ADD stock INT

- Deleting entry
    DELETE FROM products
    WHERE id = 2

- Creating tables with relationships with other tables
    CREATE TABLE orders (
	id INT not NULL,
  	order_number INT,
  	customer_id INT,
  	product_id INT,
  	PRIMARY KEY (id),
  	FOREIGN KEY (customer_id) REFERENCES customers(id),
  	FOREIGN KEY (product_id) REFERENCES products(id)
    )

- Querying information from different tables that have relationships
    SELECT orders.order_number, customers.first_name, customers.last_name, customers.address
    FROM orders
    INNER JOIN customers ON orders.customer_id = customers.id

    SELECT orders.order_number, products.name, products.price
    FROM orders
    INNER JOIN products ON orders.product_id = products.id