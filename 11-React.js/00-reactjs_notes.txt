React.js
    A javascript library for building user interfaces
    It is a frontend library
    
    React.js permits creating of components
    Components can be used as "custom" html elements
    making cleaner and reduced html code
    
    (Bootstrap for example, uses common html elements
    so the html is much more complex and dense)

    Each component has a combined html, css and js
    meaning embedded markup, style and functionality

JSX
    JSX stands for JavaScript XML
    
    JSX allows us to write HTML elements in JavaScript and 
    place them in the DOM without any createElement()  
    and/or appendChild() methods.

    You are not required to use JSX, 
    but JSX makes it easier to write React applications.

    Examples:
        JSX:
        const myelement = <h1>I Love JSX!</h1>;
        ReactDOM.render(myelement, document.getElementById('root'));

        Without JSX:
        const myelement = React.createElement('h1', {}, 'I do not use JSX!');
        ReactDOM.render(myelement, document.getElementById('root'));

Babel
    ReactDom uses babel to convert js ES6 from JSX statements
    to the most basic javascript code.
    It will permit your react app to run on older browsers.
    https://babeljs.io/

Expressions in JSX
    With JSX you can write expressions inside curly braces { }.
    The expression can be a React variable, or property, 
    or any other valid JavaScript expression. 
    JSX will execute the expression and return the result

Inserting a Large Block of HTML in JSX
    To write HTML on multiple lines, put the HTML inside parentheses.

Referring to DOM properties inside JSX statements
    Inside ReactDOM.render, it looks like plain HTML
    but it is not, it is DOM / JSX
    so if you use <h1 class="heading">
    will occurs some warnings on browser
    it is necessary to use DOM properties and methods
    in this example, the correct is <h1 className="heading">
    https://www.w3schools.com/jsref/dom_obj_all.asp

JSX documentation
    https://www.w3schools.com/react/react_jsx.asp
    https://reactjs.org/docs/introducing-jsx.html

Code Sandbox
    It is a website that permits to develop react.js 
    online, being very similar to vscode.
    https://codesandbox.io/

Introduction to React.js 
https://codesandbox.io/s/react-00-introduction-to-jsx-cr7s8

Javascript Expressions in JSX
https://codesandbox.io/s/react-01-javascript-expressions-in-jsx-szcuu

JSX attributes and styling
https://codesandbox.io/s/react-02-jsx-attributes-and-styling-upxk5

React Components
https://codesandbox.io/s/react-03-components-tc54h

React Import and Export
https://codesandbox.io/s/react-04-es6-importexport-i0fme
https://codesandbox.io/s/react-041-es6-importexport-practice-8ybc3

Setup Local Environment
    1. Check if node is on LTS version
        > node --version
        Compare with LTS on node.js website
        if it is not, install LTS version
    2. Install Visual Studio Code
    3. Install some syntax highlighting extension for babel
    4. Create a React App
        See https://reactjs.org/docs/create-a-new-react-app.html
        Execute create app command
        > npx create-react-app "my-app name"        
    5. Delete unnecessary files
        Inside public folder   
            Delete all files except index.html
        Inside src folder
            Delete all files except index.js
    6. Delete unnecessary code
        Inside index.html
            Delete everything except:
                title inside <head>
                <div id="root"></div> inside <body>
            Insert script link to index.js in end of <body>
                <script src="./src/index.js" type="text/jsx"></script>
        Inside index.js
            Delete everything except first 2 imports
    7. Run React App local server
        Execute ">npm start" command inside app folder
    


