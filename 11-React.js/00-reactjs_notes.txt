React.js
    A javascript library for building user interfaces
    It is a frontend library
    
    React.js permits creating of components
    Components can be used as "custom" html elements
    making cleaner and reduced html code
    
    (Bootstrap for example, uses common html elements
    so the html is much more complex and dense)

    Each component has a combined html, css and js
    meaning embedded markup, style and functionality

JSX
    JSX stands for JavaScript XML
    
    JSX allows us to write HTML elements in JavaScript and 
    place them in the DOM without any createElement()  
    and/or appendChild() methods.

    You are not required to use JSX, 
    but JSX makes it easier to write React applications.

    Examples:
        JSX:
        const myelement = <h1>I Love JSX!</h1>;
        ReactDOM.render(myelement, document.getElementById('root'));

        Without JSX:
        const myelement = React.createElement('h1', {}, 'I do not use JSX!');
        ReactDOM.render(myelement, document.getElementById('root'));

Babel
    ReactDom uses babel to convert js ES6 from JSX statements
    to the most basic javascript code.
    It will permit your react app to run on older browsers.
    https://babeljs.io/

Expressions in JSX
    With JSX you can write expressions inside curly braces { }.
    The expression can be a React variable, or property, 
    or any other valid JavaScript expression. 
    JSX will execute the expression and return the result

Inserting a Large Block of HTML in JSX
    To write HTML on multiple lines, put the HTML inside parentheses.

Referring to DOM properties inside JSX statements
    Inside ReactDOM.render, it looks like plain HTML
    but it is not, it is DOM / JSX
    so if you use <h1 class="heading">
    will occurs some warnings on browser
    it is necessary to use DOM properties and methods
    in this example, the correct is <h1 className="heading">
    https://www.w3schools.com/jsref/dom_obj_all.asp

JSX documentation
    https://www.w3schools.com/react/react_jsx.asp
    https://reactjs.org/docs/introducing-jsx.html

React Components
    Components are independent and reusable bits of code. 
    They serve the same purpose as JavaScript functions, 
    but work in isolation and return HTML via a render() function.    
    
    Create a new component, if you see repeated code snippets.
    Component's name must start with an upper case letter.

React Properties (props)
    “Props” is a special keyword in React, 
    It stands for properties and is being used for passing data 
    from one component to another.
    
    It can be used as custom HTML elements attributes
    
    Example:
        // Card Component:
            function Card(props){
                return (
                    <div>
                    <h1>{props.name}</h1>
                    </div>
                );
            }

        // ReactDOM rendering the component and using "name" property
        ReactDOM.render(
            <Card name ="Davi Belo/>,
            document.getElementById('root')
        )
    
    But the important part here is that data with props are being passed in 
    a uni-directional flow. (one way from parent to child)
    
    Furthermore, props data is read-only, 
    which means that data coming from the parent should not be changed by 
    child components.

React Developer Tools
    This is a chrome extension that can be used 
    to navigate react components tree
    see all props, etc...
    
    The React Dev Tools can be accessed on 
    "Components" tab on Chrome Dev Tools (F12)
    Click on gear to access view options...
    Click on "<>" to view component code
    
    You can also use it on websites like airbnb, netflix

Cloud Environment = Code Sandbox
    It is a website that permits to develop react.js 
    online, being very similar to vscode.
    https://codesandbox.io/

Setup of Local Environment
    1. Check if node is on LTS version
        > node --version
        Compare with LTS on node.js website
        if it is not, install LTS version
    2. Install Visual Studio Code
    3. Install some syntax highlighting extension for babel
    4. Create a React App
        See https://reactjs.org/docs/create-a-new-react-app.html
        Execute create app command
        > npx create-react-app "my-app name"        
    5. Delete unnecessary files
        Inside public folder   
            Delete all files except index.html
        Inside src folder
            Delete all files except index.js
    6. Delete unnecessary code
        Inside index.html
            Delete everything except:
                title inside <head>
                <div id="root"></div> inside <body>
            Insert script link to index.js in end of <body>
                <script src="./src/index.js" type="text/jsx"></script>
        Inside index.js
            Delete everything except first 2 imports
    7. Run React App local server
        Execute ">npm start" command inside app folder

React Hooks
    Hooks are a new addition in React 16.8. 
    A Hook is a special function that lets 
    you “hook into” React features.    
    https://reactjs.org/docs/hooks-intro.html

State Hook
    A Hook that lets you add React state to function components
    Its permits to render states dynamically.    
    https://reactjs.org/docs/hooks-state.html
    

Handling Events on React
    Use HTML Attributes inside JSX and state hooks.
    (https://www.w3schools.com/tags/ref_eventattributes.asp)
    
React Forms
    HTML form elements work a little bit differently from other DOM elements in React, because form elements 
    naturally keep some internal state.
    https://reactjs.org/docs/forms.html

Class Components   
    To use state without the state hook, it is necessary
    to use class components instead of functional components
    https://reactjs.org/docs/state-and-lifecycle.html

Use classes or hooks?
    https://reactjs.org/docs/hooks-faq.html#should-i-use-hooks-classes-or-a-mix-of-both
    New code 
        = Use hooks
    Old code with already ClassComponents 
        = Continue to use ClassComponent code or change everything





